services:
  redis:
    container_name: redis
    image: redis
    restart: always
    expose:
      - "6379"
    command: redis-server --save 60 1 --loglevel warning

  backend:
    build: .
    container_name: todoapp
    command: sh -c "python manage.py prepare_app && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    restart: always
    depends_on:
      - redis
      - postgres
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=todo_db
      - DB_USER=todo_user
      - DB_PASSWORD=todo_pass
      - DB_HOST=postgres
      - DB_PORT=5432
      - SECRET_KEY='django-insecure-)!w7$7wxdo*5@db%t#s2914wn(-ucf!)945v%p+$uobt@_k_%j'
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers.DatabaseScheduler
      - SERVICE_NAME=backend
      - CORS_ALLOWED_ORIGINS=http://127.0.0.1:5500
      - OPENWEATHER_API_KEY=f33291f968f1732b3c9704700946af2a
      - OPENWEATHERMAP_URL=http://api.openweathermap.org/data/2.5/weather
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "--output", "/dev/null", "http://127.0.0.1:8000"]
      start_period: 30s
      interval: 60s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: todo_db
      POSTGRES_USER: todo_user
      POSTGRES_PASSWORD: todo_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"

  celery_worker:
    build: .
    image: celery_worker
    command: celery -A core worker -l INFO
    restart: on-failure
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./core:/app
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=todo_db
      - DB_USER=todo_user
      - DB_PASSWORD=todo_pass
      - DB_HOST=postgres
      - DB_PORT=5432
      - SECRET_KEY='django-insecure-)!w7$7wxdo*5@db%t#s2914wn(-ucf!)945v%p+$uobt@_k_%j'
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers.DatabaseScheduler
      - SERVICE_NAME=backend
      - CORS_ALLOWED_ORIGINS=http://127.0.0.1:5500
      - OPENWEATHER_API_KEY=f33291f968f1732b3c9704700946af2a
      - OPENWEATHERMAP_URL=http://api.openweathermap.org/data/2.5/weather

  celery_beat:
    build: .
    image: celery_beat
    command: celery -A core beat -l info
    restart: on-failure
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./core:/app
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=todo_db
      - DB_USER=todo_user
      - DB_PASSWORD=todo_pass
      - DB_HOST=postgres
      - DB_PORT=5432
      - SECRET_KEY='django-insecure-)!w7$7wxdo*5@db%t#s2914wn(-ucf!)945v%p+$uobt@_k_%j'
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers.DatabaseScheduler
      - SERVICE_NAME=backend
      - CORS_ALLOWED_ORIGINS=http://127.0.0.1:5500
      - OPENWEATHER_API_KEY=f33291f968f1732b3c9704700946af2a
      - OPENWEATHERMAP_URL=http://api.openweathermap.org/data/2.5/weather

  nginx:
    image: nginx:latest
    container_name: django_blog_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - backend
      - postgres
      - redis

volumes:
  static_volume:
  media_volume:
  postgres_data: