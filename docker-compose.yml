services:
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  backend:
    build: .
    container_name: todoapp
    command: sh -c "python manage.py prepare_app && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./core:/app
    ports:
      - "8000:8000"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "--output", "/dev/null", "http://127.0.0.1:8000"]
      start_period: 30s
      interval: 60s
      timeout: 10s
      retries: 5

  celery_worker:
    build: .
    image: celery_worker
    command: celery -A core worker -l INFO
    restart: on-failure
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./core:/app

  celery_beat:
    build: .
    image: celery_beat
    command: celery -A core beat -l info
    restart: on-failure
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./core:/app
